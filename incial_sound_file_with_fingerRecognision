import cv2
import mediapipe as mp
import random
import pygame

# Initialize the camera
cap = cv2.VideoCapture(0)

# Setting up pose detection
mpPose = mp.solutions.pose
pose = mpPose.Pose(min_detection_confidence=0.5, min_tracking_confidence=0.5, model_complexity=2)
mpDraw = mp.solutions.drawing_utils

# Initialize pygame for sound
pygame.mixer.init()
hit_sound = pygame.mixer.Sound('hit_sound.wav')  # Replace with your sound file path

# Setting up target points
score = 0
x_enemy = random.randint(50, 600)
y_enemy = random.randint(50, 400)

def enemy():
    '''Function that creates random targets'''
    global x_enemy, y_enemy
    cv2.circle(img, (x_enemy, y_enemy), 25, (0, 200, 0), 5)
    print('yes')

# Track which finger to use: 20 for right index finger, 19 for left index finger
use_right_index = True

while True:
    success, img = cap.read()
    if not success:
        break

    # Invert the image
    img = cv2.flip(img, 1)

    imgRGB = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
    results = pose.process(imgRGB)

    # Drawing target circles
    font = cv2.FONT_HERSHEY_SIMPLEX
    color = (255, 0, 255)
    cv2.putText(img, "Score", (480, 30), font, 1, color, 4, cv2.LINE_AA)
    cv2.putText(img, str(score), (590, 30), font, 1, color, 4, cv2.LINE_AA)

    enemy()

    if results.pose_landmarks:
        for person_landmarks in results.pose_world_landmarks:
            mpDraw.draw_landmarks(img, person_landmarks, mpPose.POSE_CONNECTIONS)
            for id, lm in enumerate(person_landmarks.landmark):
                h, w, c = img.shape
                imageWidth, imageHeight = int(lm.x * w), int(lm.y * h)  # Get x and y coordinates
                cv2.circle(img, (imageWidth, imageHeight), 10, (255, 0, 0), cv2.FILLED)

        # Code to change landmarks and match with point
        for person_landmarks in results.pose_landmarks:
            if person_landmarks:
                # Determine enemy position
                if use_right_index:
                    index_finger_id = 20
                else:
                    index_finger_id = 19

                if y_enemy < img.shape[0] // 2:  # Top half of the screen
                    index_finger_id = 20  # Right index finger
                else:  # Bottom half of the screen
                    index_finger_id = 19  # Left index finger

                # Get the normalized landmark for the selected index finger
                normalizedLandmark = person_landmarks.landmark[index_finger_id]
                pixelCoordinatesLandmark = mpDraw._normalized_to_pixel_coordinates(normalizedLandmark.x, normalizedLandmark.y, img.shape[1], img.shape[0])
                if pixelCoordinatesLandmark:
                    try:
                        cv2.circle(img, (pixelCoordinatesLandmark[0], pixelCoordinatesLandmark[1]), 25, (0, 200, 0), 5)
                        if pixelCoordinatesLandmark[0] in range(x_enemy - 10, x_enemy + 11) and pixelCoordinatesLandmark[1] in range(y_enemy - 10, y_enemy + 11):
                            print("found")
                            hit_sound.play()  # Play the hit sound
                            x_enemy = random.randint(50, 600)
                            y_enemy = random.randint(50, 400)
                            score += 1
                            cv2.putText(img, "Score", (100, 100), font, 1, color, 4, cv2.LINE_AA)
                            enemy()
                            # Toggle to the other index finger
                            use_right_index = not use_right_index
                    except Exception as e:
                        print(f"Error: {e}")

    cv2.imshow('image', img)
    if (cv2.waitKey(1) & 0xFF == ord('q')) or cv2.getWindowProperty('image', cv2.WND_PROP_VISIBLE) < 1:
        break

cap.release()
cv2.destroyAllWindows()
'''   download a sound file. Here are the steps to download a free sound file from a website like FreeSound or Zapsplat:

1. **Visit a Sound Library Website**: You can use websites like [FreeSound](https://freesound.org/) or [Zapsplat](https://www.zapsplat.com/).

2. **Search for a Sound**: Use the search bar to look for a sound you need, for example, "hit sound" or "success sound".

3. **Download the Sound**:
    - On FreeSound, you might need to create a free account to download sounds.
    - On Zapsplat, you might also need to create an account, but many sounds are available for free with attribution.

Here's an example of how to download a sound from FreeSound:

1. Go to [FreeSound](https://freesound.org/).
2. Use the search bar to look for a sound (e.g., "hit sound").
3. Find a sound you like and click on it.
4. Click the download button (you may need to sign up or log in first).

Once you've downloaded the sound file, you can place it in your project directory and reference it in your script.

If you need a direct example of a sound file, here is a simple way to use a hit sound available on Zapsplat:

1. Go to [Zapsplat](https://www.zapsplat.com/).
2. Search for "hit sound".
3. Select a sound and click "Free Download".
4. Save the file in your project directory.

If you'd like, I can also generate a simple sine wave sound file programmatically and save it for you. Let me know if you'd prefer this approach. '''
